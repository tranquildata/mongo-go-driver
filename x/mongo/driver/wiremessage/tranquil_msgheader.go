package wiremessage

import "errors"

// DefaultSize defines the expected message length received by the server.
// This constant should be use when allocating a byte slice for a new message.
// Note that in some places of the code uses a value of 256.
const DefaultSize = 512

// MsgHeader represents the header of a wire message. All messages
// generated by clients and the server use this header.
type MsgHeader struct {
	Length     int32
	RequestID  int32
	ResponseTo int32
	Opcode     OpCode
}

// ReadMsgHeader reads a wire message header from src.
func ReadMsgHeader(src []byte) (*MsgHeader, error) {
	var ok bool
	hdr := &MsgHeader{}
	hdr.Length, hdr.RequestID, hdr.ResponseTo, hdr.Opcode, _, ok = ReadHeader(src)
	if !ok {
		return nil, errors.New("Incomplete header")
	}
	return hdr, nil
}

// WriteMsgHeader writes a complete message header to the provided dst. The Length
// field in the header must include the value equivalent to tne wire message length,
// including the header as well as any eventual BSON payload.
func WriteMsgHeader(hdr MsgHeader, dst []byte) []byte {
	return AppendHeader(dst, hdr.Length, hdr.RequestID, hdr.ResponseTo, hdr.Opcode)
}
